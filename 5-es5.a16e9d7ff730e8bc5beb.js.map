{"version":3,"sources":["webpack:///src/app/containers/user/index.ts","webpack:///src/app/containers/user/user.component.ts","webpack:///src/app/containers/user/user.component.ts.UserComponent.html","webpack:///src/app/containers/user/user-player.service.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts.PlaylistsComponent.html","webpack:///src/app/containers/user/user.guard.ts"],"names":["UserModule","appApi","store","playlists$","this","select","currentPlaylist$","isSignedIn$","signinUser","nowPlaylistService","userProfile","playlist","fetchPlaylistItems","id","subscribe","items","dispatch","updateIndexByMedia","media","PlaylistsComponent","userPlayerService","state","user","playlists","playSelectedPlaylist","queuePlaylist","AuthGuard","authorization","router","route","url","checkLogin","canActivate","isSignIn","navigate"],"mappings":"8iBAmCaA,E,0KCPA,E,WAKX,WAAoBC,EAAuBC,2BAAvB,KAAAD,SAAuB,KAAAC,QAJ3C,KAAAC,WAAaC,KAAKF,MAAMG,OAAO,KAC/B,KAAAC,iBAAmBF,KAAKF,MAAMG,OAAO,KACrC,KAAAE,YAAcH,KAAKF,MAAMG,OAAO,K,8FAO9BD,KAAKH,OAAOO,iB,oWChCZ,6FAAoD,8FAElD,uIACyB,UADzB,MACE,c,0BADF,iBAEE,gLAA2B,+CAC7B,cADE,QAAM,YAAa,M,wCATzB,8EACE,oLAIA,gJAAG,kDAOH,2NAAe,gCAXf,QACE,4BACA,WAEF,SAAG,qDAA8B,eAOjC,WAAe,M,gTCLN,E,WACX,WACUC,EACAC,EACAR,2BAFA,KAAAO,qBACA,KAAAC,cACA,KAAAR,Q,kEAGWS,cACnBP,KAAKM,YACFE,mBAAmBD,EAASE,GAAI,IAChCC,WAAWC,YACVX,EAAKF,MAAMc,SAAS,IAAI,IAAwBD,IAChDX,EAAKK,mBAAmBQ,mBAAmBF,EAAM,GAAGF,IACpDT,EAAKF,MAAMc,SAAS,IAAI,IAAsBD,EAAM,U,oCAI5CJ,cACZP,KAAKM,YACFE,mBAAmBD,EAASE,GAAI,IAChCC,WAAWC,YAAKA,OACfX,EAAKF,MAAMc,SAAS,IAAI,IAAwBD,IACzCA,O,iCAIFG,GACTd,KAAKF,MAAMc,SAAS,IAAI,IAAuBE,M,gCAGvCA,GACRd,KAAKF,MAAMc,SAAS,IAAI,IAAsBE,IAC9Cd,KAAKF,MAAMc,SAAS,IAAI,IAAuBE,IAC/Cd,KAAKF,MAAMc,SAAS,IAAI,IAAwBE,Q,KCpBvCC,E,WAGX,WACUjB,EACAkB,2BADA,KAAAlB,QACA,KAAAkB,oBAJV,KAAAjB,WAAaC,KAAKF,MAAMG,QAAOgB,YAAKA,OAAIA,EAAMC,KAAKC,a,sGAS9BZ,GACnBP,KAAKgB,kBAAkBI,qBAAqBb,K,4CAGxBA,GACpBP,KAAKgB,kBAAkBK,cAAcd,O,mGCjCnC,8IAK4C,UAL5C,MAIE,a,uDACA,c,wDALF,sHAK4C,cAL5C,QAEE,EAAkB,kBAClB,YAAa,M,wCALnB,qGACE,6IACE,yKACE,mFADF,QACE,qDAA2C,sB,oVCEtCe,E,WACX,WAAoBC,EAAsCC,2BAAtC,KAAAD,gBAAsC,KAAAC,S,yDAE9CC,EAA+BR,GAEzC,IAAMS,EAAcT,EAAMS,IAC1B,OAAO1B,KAAK2B,WAAWD,K,uCAGRD,EAA+BR,GAC9C,OAAOjB,KAAK4B,YAAYH,EAAOR,K,iCAGtBS,GACT,QAAI1B,KAAKuB,cAAcM,aAMvB7B,KAAKwB,OAAOM,SAAS,CAAC,kB","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/index';\r\nimport { AppNavbarModule } from '../app-navbar';\r\n\r\nimport { PlaylistViewModule } from '../playlist-view'\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { PlaylistsComponent } from './playlists';\r\n// import { PlaylistViewComponent, PlaylistResolver, PlaylistVideosResolver } from '@shared/components/playlist-view';\r\n\r\nimport { AuthGuard } from './user.guard';\r\nimport { UserPlayerService } from './user-player.service';\r\nimport { routing } from './user.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    AppNavbarModule,\r\n    PlaylistViewModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    UserComponent,\r\n    PlaylistsComponent\r\n  ],\r\n  exports: [\r\n    UserComponent\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    UserPlayerService,\r\n    // PlaylistResolver,\r\n    // PlaylistVideosResolver\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { EchoesState } from '@core/store';\r\n\r\nimport * as UserProfile from '@core/store/user-profile/user-profile.selectors';\r\nimport { AppApi } from '@api/app.api';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./user.scss'],\r\n  template: `\r\n  <article>\r\n    <app-navbar\r\n      [header]=\"'My Profile - My Playlists'\"\r\n      [headerIcon]=\"'heart-o'\"\r\n    ></app-navbar>\r\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\r\n      To view your playlists in youtube, you need to sign in.\r\n      <button class=\"btn btn-lg btn-primary\"\r\n        (click)=\"signInUser()\">\r\n        <icon name=\"google\"></icon> Sign In\r\n      </button>\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n  </article>\r\n  `\r\n})\r\nexport class UserComponent implements OnInit {\r\n  playlists$ = this.store.select(UserProfile.getUserPlaylists);\r\n  currentPlaylist$ = this.store.select(UserProfile.getUserViewPlaylist);\r\n  isSignedIn$ = this.store.select(UserProfile.getIsUserSignedIn);\r\n\r\n  constructor(private appApi: AppApi, public store: Store<EchoesState>) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  signInUser() {\r\n    this.appApi.signinUser();\r\n  }\r\n}\r\n","\n  <article>\n    <app-navbar\n      [header]=\"'My Profile - My Playlists'\"\n      [headerIcon]=\"'heart-o'\"\n    ></app-navbar>\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\n      To view your playlists in youtube, you need to sign in.\n      <button class=\"btn btn-lg btn-primary\"\n        (click)=\"signInUser()\">\n        <icon name=\"google\"></icon> Sign In\n      </button>\n    </p>\n    <router-outlet></router-outlet>\n  </article>\n  ","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { YoutubePlayerService, NowPlaylistService, UserProfile } from '@core/services';\r\nimport { EchoesState } from '@core/store';\r\nimport * as NowPlaylist from '@core/store/now-playlist';\r\nimport * as AppPlayer from '@core/store/app-player';\r\n\r\n@Injectable()\r\nexport class UserPlayerService {\r\n  constructor(\r\n    private nowPlaylistService: NowPlaylistService,\r\n    private userProfile: UserProfile,\r\n    private store: Store<EchoesState>\r\n  ) { }\r\n\r\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userProfile\r\n      .fetchPlaylistItems(playlist.id, '')\r\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\r\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\r\n        this.nowPlaylistService.updateIndexByMedia(items[0].id);\r\n        this.store.dispatch(new AppPlayer.LoadAndPlay(items[0]));\r\n      });\r\n  }\r\n\r\n  queuePlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userProfile\r\n      .fetchPlaylistItems(playlist.id, '')\r\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\r\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\r\n        return items;\r\n      });\r\n  }\r\n\r\n  queueVideo(media: GoogleApiYouTubeVideoResource) {\r\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\r\n  }\r\n\r\n  playVideo(media: GoogleApiYouTubeVideoResource) {\r\n    this.store.dispatch(new AppPlayer.LoadAndPlay(media));\r\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\r\n    this.store.dispatch(new NowPlaylist.SelectVideo(media));\r\n  }\r\n}\r\n","import { UserPlayerService } from '../user-player.service';\r\nimport { EchoesState } from '@core/store';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Component({\r\n  selector: 'playlists',\r\n  template: `\r\n  <section class=\"videos-list\">\r\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\r\n      <youtube-playlist\r\n        *ngFor=\"let playlist of playlists$ | async\"\r\n        [media]=\"playlist\"\r\n        link=\"/user/\"\r\n        (play)=\"playSelectedPlaylist(playlist)\"\r\n        (queue)=\"queueSelectedPlaylist(playlist)\">\r\n      </youtube-playlist>\r\n    </div>\r\n  </section>\r\n  `\r\n})\r\nexport class PlaylistsComponent implements OnInit {\r\n  playlists$ = this.store.select(state => state.user.playlists);\r\n\r\n  constructor(\r\n    private store: Store<EchoesState>,\r\n    private userPlayerService: UserPlayerService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userPlayerService.playSelectedPlaylist(playlist);\r\n  }\r\n\r\n  queueSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userPlayerService.queuePlaylist(playlist);\r\n  }\r\n}\r\n","\n  <section class=\"videos-list\">\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\n      <youtube-playlist\n        *ngFor=\"let playlist of playlists$ | async\"\n        [media]=\"playlist\"\n        link=\"/user/\"\n        (play)=\"playSelectedPlaylist(playlist)\"\n        (queue)=\"queueSelectedPlaylist(playlist)\">\n      </youtube-playlist>\n    </div>\n  </section>\n  ","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { Authorization } from '@core/services';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private authorization: Authorization, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    // console.log('AuthGuard#canActivate called', { state });\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): boolean {\r\n    if (this.authorization.isSignIn()) { return true; }\r\n\r\n    // Store the attempted URL for redirecting\r\n    // this.authService.redirectUrl = url;\r\n\r\n    // Navigate to the login page with extras\r\n    this.router.navigate(['/user']);\r\n    return false;\r\n  }\r\n}\r\n"]}